{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"seller",
				"seller"
			],
			[
				"fcn",
				"fcn"
			],
			[
				"com",
				"completed"
			],
			[
				"use",
				"userA"
			],
			[
				"res",
				"responseString"
			],
			[
				"log",
				"log_message"
			],
			[
				"user",
				"user_a"
			],
			[
				"u_",
				"u_balance"
			],
			[
				"hi",
				"hide"
			],
			[
				"c",
				"c"
			],
			[
				"comp",
				"company_name"
			],
			[
				"val",
				"value"
			],
			[
				"va",
				"val"
			],
			[
				"con",
				"console"
			],
			[
				"inf",
				"info_back"
			],
			[
				"lo",
				"log"
			],
			[
				"Po",
				"POST"
			],
			[
				"Pass",
				"Password"
			],
			[
				"fun",
				"function"
			],
			[
				"seller_",
				"seller_pass"
			],
			[
				"pa",
				"password"
			],
			[
				"i",
				"id\tAttr"
			],
			[
				"s",
				"script"
			],
			[
				"pr",
				"print"
			],
			[
				"F",
				"False"
			],
			[
				"is_p",
				"is_paid"
			],
			[
				"is",
				"is_paid"
			],
			[
				"mem",
				"mem_t"
			],
			[
				"Mem",
				"MempershipPayement"
			],
			[
				"ge",
				"get_absolute_url"
			],
			[
				"a",
				"addAdvertise"
			],
			[
				"hTT",
				"HttpResponseRedirect"
			],
			[
				"RETU",
				"return"
			],
			[
				"login",
				"login_required"
			],
			[
				"fo",
				"forms"
			],
			[
				"sen",
				"send_notice"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"fon",
				"font-style"
			],
			[
				"def",
				"default"
			],
			[
				"valu",
				"values_list"
			],
			[
				"se",
				"seller"
			],
			[
				"ac",
				"action\tAttr"
			],
			[
				"r",
				"reverse"
			],
			[
				"al",
				"alt\tAttr"
			],
			[
				"op",
				"option\tTag"
			],
			[
				"us",
				"user"
			],
			[
				"d",
				"Date"
			],
			[
				"g",
				"getElementById"
			],
			[
				"ma",
				"margin"
			],
			[
				"reu",
				"return"
			],
			[
				"re",
				"request"
			],
			[
				"for",
				"form"
			],
			[
				"form",
				"form_class"
			],
			[
				"au",
				"autofocus\tAttr"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"sel",
				"self"
			],
			[
				"H",
				"HttpResponseRedirect"
			],
			[
				"h",
				"h1\tTag"
			],
			[
				"col",
				"color"
			],
			[
				"t",
				"td\tTag"
			],
			[
				"border-ra",
				"border-radius"
			],
			[
				"bor",
				"border-style"
			],
			[
				"sty",
				"style"
			],
			[
				"li",
				"link\tTag"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"wi",
				"width"
			],
			[
				"on",
				"onSuccess"
			],
			[
				"me",
				"meta\tTag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "start.sh",
			"settings":
			{
				"buffer_size": 5477,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "app-webservice/Dockerfile",
			"settings":
			{
				"buffer_size": 274,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var express = require('express');\nvar router = express.Router();\n\n/*var app = express();\nvar http = require('http').Server(app);\n\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});*/\n\nvar my_cc;\n\n // Step 1 ================================== \n    var Ibc1 = require('ibm-blockchain-js');\n    var ibc = new Ibc1(/*logger*/);             //you can pass a logger such as winston here - optional \n    var chaincode = {};\n \n    // ================================== \n    // configure ibc-js sdk \n    // ================================== \n    var options =   {\n        network:{\n            peers:   [{\n                \"api_host\": \"172.17.0.2\",\n                \"api_port\": 7050,\n                //\"api_port_tls\": xxx,\n                //\"id\": \"xxxxxx-xxxx-xxx-xxx-xxxxxxxxxxxx_vpx\"\n                \"id\": \"app_peer\"\n            }],\n            users:  [{\n                \"enrollId\": \"test_user0\",\n                \"enrollSecret\": \"MS9qrN8hFjlE\"\n            }],\n            options: {              //this is optional \n                quiet: true, \n                timeout: 60000,\n                tls: false,\n            }\n        },\n        chaincode:{\n            zip_url: 'https://github.com/pagito/CCPE-Blockchain/raw/master/chaincode/ccpe_chaincode.zip',\n            unzip_dir: '/',\n            git_url: 'https://github.com/pagito/CCPE-Blockchain/chaincode',\n            deployed_name: null\n            //deployed_name:'df9b6b3af9acd15fe6c9024a5b23c6deb7ded24bfaa2e95494ccca6e594a9746077dcb81a00cd67ebb4fbbab9e801ce20803cc28174ca8a51628c1ba9612729a'\n        }\n    };\n    \n    // Step 2 ================================== \n    ibc.load(options, cb_ready);\n \n    // Step 3 ==================================\n    function cb_ready(err, cc){                             //response has chaincode functions\n        //app1.setup(ibc, cc);\n        //app2.setup(ibc, cc);\n\n    // Step 4 ==================================\n        if(err != null){\n            console.log('! looks like an error loading the chaincode or network, app will fail\\n', err);\n            if(!process.error) process.error = {type: 'load', msg: err.details};                //if it already exist, keep the last error\n        } else {\n            \n            \n\n            if(!cc.details.deployed_name || cc.details.deployed_name === ''){                //decide if I need to deploy or not\n                //console.log(\"Ready, but do not deploy yet\");\n                my_cc = cc;\n                cc.deploy('init', ['99'], {save_path: './cc_summaries', delay_ms: 30000}, function(e){                    //delay_ms is milliseconds to wait after deploy for conatiner to start, 50sec recommended\n                    console.log(\"success deployed\");\n                    cb_deployed();\n                });\n            }\n            else{\n                my_cc = cc;\n                console.log(\"chaincode hash: \" + cc.details.deployed_name);\n                console.log('chaincode summary file indicates chaincode has been previously deployed');\n             \n                cb_deployed();\n            }\n        }\n    }\n\n    // Step 5 ==================================\n    function cb_deployed(err){\n        console.log('sdk has deployed code and waited');\n        //my_cc.invoke.Init(\"Forza Juve!\");\n        //console.log('Init done');\n        //my_cc.query.read(['dummy_query']);\n        //console.log('Query done');\n        //http.listen(8088, function(){\n          console.log('listening on *:3000');\n          \n        //});\n    }\n\n\n    /*ibc.chain_stats(function(e, stats){\n        console.log('got some stats', stats);\n    });*/\n\n    /*ibc.get_transaction('d30a1445-185f-4853-b4d6-ee7b4dfa5534', function(err, data){\n        console.log('found trans', err, data);\n    });*/\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\n\n/* Example of GET method, simple respond with a string */\nrouter.get('/transaction', function(req, res) {\n  var responseObject =  { message: \"Get Transaction Page\" };\n  res.send(responseObject);\n});\n\n\n\n\n\nrouter.post('/savePoint', function(req, res){\n    console.log(\"SavePoints called ! -----------savePoint---------- Transfer_id: \" + req.body.Transfer_id + \"  \");\n    console.log(\"User_id: \" + req.body.User_id + \" \");\n    console.log(\"Amount: \" + req.body.Amount + \" \");\n    console.log(\"Seller: \" + req.body.Seller + \" \");\n\n    var transfer_id = req.body.Transfer_id;\n    var owner = req.body.User_id;\n    var amount = req.body.Amount;\n    var seller = req.body.Seller;\n    var curret_date = new Date();\n    var dateStr = curret_date.getFullYear()+''+curret_date.getMonth()+''+curret_date.getDate();\n    console.log('got point save request');\n    //my_cc.invoke.init_point([transfer_id,owner],function(err,resp){\n    //my_cc.invoke.init_point([transfer_id,owner,amount],function(err,resp){\n    my_cc.invoke.init_point([transfer_id,owner,amount,seller,dateStr],function(err,resp){\n    //my_cc.invoke.init_point([transfer_id+'-'+dateStr+'-',owner],function(err,resp){\n        var succ_data = resp;\n        succ_data = JSON.stringify(succ_data);\n\n        //res.json({\"msg\":succ_data});\n        res.json(succ_data);\n        console.log('success',succ_data);  \n    });\n});\n\n\n\n/* Get POST data coming from Exchange APP */\n\nrouter.post('/getTransaction', function(req, res, next) {\n    console.log(\"savedata called: \" + req.body.Transaction_id + \" ----------saveTransaction-------------- \");\n    \n    var id = req.body.Transaction_id;\n    var userA = req.body.User_A;\n    var userB = req.body.User_B;\n    var sellerA = req.body.Seller_A;\n    var sellerB = req.body.Seller_B;    \n    var pointA = req.body.Ex_points_A;\n    var pointB = req.body.Ex_points_B;\n    var prev_trans_id_A = req.body.Prev_Transaction_ID_A;\n    var prev_trans_id_B = req.body.Prev_Transaction_ID_B;\n    //console.log(req.body.User_A);\n\n\tvar curret_date = new Date();\n    var dateStr = curret_date.getFullYear()+''+(curret_date.getMonth()+1)+''+curret_date.getDate();\n    console.log(\"date1: \" + dateStr);\n    console.log(\"date2: \" + Date.parse(new Date()));\n    var tmpID = sellerA+'-'+sellerB+'-'+dateStr+'-'+id;\n    console.log(\"Generated id / tmpID / not used :\" + tmpID);\n    console.log(\"Order id: \" + id);\n    my_cc.invoke.init_transaction([id,userA,userB,sellerA,sellerB,pointA,pointB,prev_trans_id_A,prev_trans_id_B,dateStr],function(err, data) {\n\n\n        var succ_data = data;\n\n        //var succ_data = {\"rame\": 0, \"rame2\": \"2342\", \"rameobieqti\": {\"w\": 2}};        \n        succ_data = JSON.stringify(succ_data);\n        //var succ_data = succ_data.replace(/\\\\/g, '')\n\n        /*res.json({\n            \"msg\":succ_data\n            //\"respond\": \"true\",\n            //\"record_id\": \"id\"\n        });*/\n\n        res.json(succ_data);\n        // For next deployment I should try this JSON\n        //res.json({\"result\": succ_data.result, \"id\": succ_data.id});\n        // \n\n        //var responseObject = { \"message\": succ_data }\n        //res.send(responseObject);\n\n        //console.log('Returned data success',succ_data);\n        //console.log(\" ------------------------ \");\n        //console.log(succ_data);\n    });\n\n    //var responseObject =  { \"message\": \"Transaction accepted\",\n\t\t\t\t\t\t\t//\"respond\": true };\n\t//res.send(responseObject);\n\n    //console.log('savedata called');\n});\n\n\n// Get Chain stats\nrouter.get('/chain_stats', function(req, res){\n    console.log('got stat request');\n    ibc.chain_stats(function(e, stats){\n        console.log('got some stats', stats);\n        res.json({\"stat\": stats});              \n    });\n});\n\n\nrouter.post('/getLatTr', function(req, res){\n    var seller = req.body.SELLER_ID;\n    var num = req.body.LIMIT_NUM;\n    var diff = -28800000;\n    console.log('Got getLatTr request');\n    my_cc.query.read(['findLatest',seller,num],function(err,resp){\n        if(!err){\n\n            var pre = JSON.parse(resp);\n            if (pre.tx == null){\n                res.json({\n                    \"respond\":401,\n                    \"content\":null\n                });\n                return;\n            }\n            var len = (pre.tx.length);\n            for(var i =0 ;i <len;i++){\n                var ms = pre.tx[i].EX_TIME;\n                console.log(ms);\n                var m = new Date(parseInt(ms)-diff);\n                console.log(m);\n                pre.tx[i].EX_TIME = m.getFullYear()+'/'+padZ((m.getMonth()+1))+'/'+padZ(m.getDate())+\" \"+padZ(m.getHours())+\":\"+padZ(m.getMinutes())+\":\"+padZ(m.getSeconds());\n            }\n\n            res.json({\n                \"respond\":300,\n                \"content\":pre.tx\n            });\n            console.log('success',pre);  \n        }else{\n            console.log('fail');\n        }\n    });\n});\n\n\n/*\n// Query Points\nrouter.get('/query_point', function(req, res){\n    console.log('got read request');\n    my_cc.query.read(['read','_pointindex'],function(err,resp){\n        if(!err){\n            //var ss = resp.result.message;\n            res.json(JSON.parse(resp));\n            console.log('success',resp);  \n        }else{\n            console.log('fail');\n        }\n    });\n});\n*/\n/*\n// TEST\nrouter.post('/testPost',function(req,res){\n        var foo = req.body.foo;\n        var bar = req.body.BOO;\n        res.json({\"foo\":foo,\"BOO\":bar});\n});*/\n\n\n\nmodule.exports = router;\n",
			"file": "app-webservice/routes/index.js",
			"file_size": 8775,
			"file_write_time": 131355322192490023,
			"settings":
			{
				"buffer_size": 9432,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "app-webservice/app.js",
			"settings":
			{
				"buffer_size": 1455,
				"line_ending": "Unix"
			}
		},
		{
			"file": "chaincode/ccpe_chaincode.go",
			"settings":
			{
				"buffer_size": 13825,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "app-webservice/package.json",
			"settings":
			{
				"buffer_size": 356,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "Snippet: ",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: html-html5skel"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"packinst",
				"Package Control: Install Package"
			],
			[
				"ftp",
				"Preferences: Package Control Settings – User"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read());",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/node/nodeapp-ws-blockchain",
		"/C/node/nodeapp-ws-blockchain/app-hyperledger",
		"/C/node/nodeapp-ws-blockchain/app-hyperledger/base",
		"/C/node/nodeapp-ws-blockchain/app-hyperledger/baseimage",
		"/C/node/nodeapp-ws-blockchain/app-webservice",
		"/C/node/nodeapp-ws-blockchain/app-webservice/cc_summaries",
		"/C/node/nodeapp-ws-blockchain/app-webservice/routes",
		"/C/node/nodeapp-ws-blockchain/chaincode"
	],
	"file_history":
	[
		"/C/Users/Gio/Desktop/test_chain.go",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.510/ccpe_chaincode.go",
		"/C/node/nodeapp-ws-blockchain/chaincode/ccpe_ch.go",
		"/C/node/nodeapp-ws-blockchain/app-webservice/cc_summaries/Readme.txt",
		"/C/Users/Gio/Desktop/ccpe_chaincode.go",
		"/C/node/nodeapp-ws-blockchain/app-webservice/app.js",
		"/C/node/nodeapp-ws-blockchain/chaincode/ccpe_chaincode.go",
		"/C/node/nodeapp-ws-blockchain/app-webservice/package.json",
		"/D/Backup Muscle site/example.js",
		"/C/node/app-webservice/routes/index.js",
		"/D/Backup Node.js APP/node/app-webservice/routes/index.js",
		"/C/node/app-webservice/package.json",
		"/C/node/start.sh",
		"/C/node/app-webservice/Dockerfile",
		"/C/node/app/server.js",
		"/C/Users/Gio/AppData/Roaming/Sublime Text 3/Packages/User/Node.sublime-build",
		"/C/Users/Gio/AppData/Roaming/Sublime Text 3/Packages/User/node.sublime-build",
		"/C/node/app/node_server",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/templates/orderapp/place_order.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/includes/content-latest.html",
		"/C/Users/Gio/Documents/gocode/bin/hello.go",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/serializers.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/api.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/models.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/forms.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/templates/orderapp/order.html",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/admin.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/pgw.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeplatform/settings.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/static/exchangeapp/css/style.css",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/header.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/forms.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/static/exchangeapp/js/underscore-min.js",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/static/exchangeapp/js/backbone-min.js",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/models.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/forms.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/profile/profile_home.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/pay_membership.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/templates/orderapp/point_query.html",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/forms.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/templates/adapp/create_ad.html",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/templates/adapp/ad_form.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/create_seller.html",
		"/C/Users/Gio/Envs/exchangeplatform_mine/exchangeplatform/settings.py",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/templates/adapp/show_ad.html",
		"/C/Users/Gio/Envs/blog/templates/index.html",
		"/C/Users/Gio/Envs/blog/templates/list.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/admin.py",
		"/C/Users/Gio/Envs/blog/posts/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/profile/profile.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/models.py",
		"/C/Users/Gio/Envs/blog/posts/models.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/profile/change_password.html",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.537/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile/profile.html",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.859/models.py",
		"/C/Users/Gio/Envs/exchangeplatform_mine/exchangeapp/models.py",
		"/C/Users/Gio/Envs/exchangeplatform_mine/adapp/models.py",
		"/C/Users/Gio/Envs/exchangeplatform_mine/exchangeapp/templates/exchangeapp/profile/profile.html",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.089/settings.py",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile/orders.html",
		"/D/Backup Django/exchangeplatform_04_12_2016/sellerapp/templates/sellerapp/add_seller.html",
		"/D/Backup Django/exchangeplatform_06_12_2016/orderapp/views.py",
		"/D/Backup Django/exchangeplatform_with_custom_reg/exchangeapp/templates/exchangeapp/register.html",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/models.py",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.201/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/includes/content-bottom.html",
		"/D/Backup Django/exchangeplatform_04_12_2016/exchangeplatform/settings.py",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.458/models.py",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.687/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile/addseller.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile/edit_profile.html",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.741/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/profile/orders.html",
		"/C/Users/Gio/Envs/exchangeplatform/adapp/templates/adapp/sellerlogin.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/registration/login.html",
		"/C/Users/Gio/Envs/mysite/books/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/auth/user_form.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile/addseller_success.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/admin.py",
		"/C/Users/Gio/Envs/mysite/books/admin.py",
		"/C/Users/Gio/AppData/Local/temp/Rar$DIa0.320/views.py",
		"/D/Backup Django/exchangeplatform_06_12_2016/exchangeapp/views.py",
		"/C/Users/Gio/Envs/blog/posts/forms.py",
		"/C/Users/Gio/Envs/blog/posts/urls.py",
		"/C/Users/Gio/Envs/blog/blog/urls.py",
		"/D/Web Development/Python/Udemy/try-django-19-master/try-django-19-master/src/posts/views.py",
		"/D/Web Development/Python/Udemy/try-django-19-master/try-django-19-master/src/templates/post_form.html",
		"/C/Users/Gio/Envs/blog/templates/post_detail.html",
		"/C/Users/Gio/Envs/blog/templates/post_form.html",
		"/D/Web Development/Python/Udemy/try-django-19-master/try-django-19-master/src/templates/post_detail.html",
		"/D/Web Development/Python/Udemy/try-django-19-master/try-django-19-master/src/posts/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform_06_12_2016/exchangeplatform/settings.py",
		"/C/Users/Gio/Envs/blog/posts/admin.py",
		"/C/Users/Gio/Envs/exchangeplatform_04_12_2016/exchangeplatform/settings.py",
		"/C/Users/Gio/Envs/exchangeplatform1/orderapp/forms.py",
		"/C/Users/Gio/Envs/exchangeplatform1/orderapp/models.py",
		"/C/Users/Gio/Envs/exchangeplatform1/exchangeplatform/settings.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/seller_success.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/add_seller.html",
		"/C/Users/Gio/Envs/exchangeplatform/orderapp/templates/orderapp/order_success.html",
		"/C/Users/Gio/Envs/myproject/Scripts/django-admin.py",
		"/D/Tutorials/Lynda - Ajax with PHP/Exercise Files/Chapter_02/02_05-final/ajax_zipcode/index.html",
		"/D/Tutorials/Lynda - Ajax with PHP/Exercise Files/Chapter_02/02_04-final/ajax_text/index.html",
		"/D/Tutorials/Lynda - Ajax with PHP/Exercise Files/Chapter_03/03_02-final/ajax_html/index.html",
		"/D/Tutorials/Lynda - Ajax with PHP/Exercise Files/Chapter_02/02_04/ajax_text/index.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeplatform/urls.py",
		"/C/Users/Gio/Envs/exchangeplatform/views.py",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/profile.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/sellerapp/sellerlogin.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/registration/registration_form.html",
		"/C/Users/Gio/Envs/exchangeplatform/sellerapp/templates/test.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/profile_form.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/admin/base_site.html",
		"/C/Users/Gio/Envs/exchangeplatform/manage.py",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/404.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/profile.html",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/exchangeapp/signup.html",
		"/C/xampp/htdocs/igeomarket/application/views/layout/header.php",
		"/C/Users/Gio/Envs/exchangeplatform/exchangeapp/templates/registration/logout.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pointIndexStr",
			"transactionStr",
			"pointIndexStr",
			"ccpe",
			"ccpx",
			"encoding/json",
			"Chain sta",
			"dummy_query",
			"();\n",
			"my_cc",
			"deploy",
			"hello_world",
			"Query",
			"run",
			"consensus",
			"deploy",
			"http",
			"my_cc",
			"g_cc",
			"deploy",
			"init_transaction",
			"minimalTxStr",
			"tmpStr",
			"tmpRelatedPoint",
			"trades",
			"minimalTxStr",
			"tmpStr",
			"tmpRelatedPoint",
			"cc",
			"user_balance",
			"Http",
			"us_name",
			"addseller",
			"objects",
			"messages",
			"DATE",
			"DATE_FORMAT",
			"formats",
			"update",
			"add_seller",
			"orders.html",
			"container",
			"layout",
			"container",
			"color",
			"TEMPLAT",
			"templa",
			"focus",
			".navbar",
			".navbar-default .navbar-nav",
			"order",
			"posta",
			"logo",
			"TEST_RUNNER",
			"ph.jpg",
			"calculateAndDisplayRoute",
			"marker"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "start.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5477,
						"regions":
						{
						},
						"selection":
						[
							[
								4934,
								4934
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1872.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app-webservice/Dockerfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 274,
						"regions":
						{
						},
						"selection":
						[
							[
								93,
								93
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app-webservice/routes/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9432,
						"regions":
						{
						},
						"selection":
						[
							[
								7717,
								7721
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app-webservice/app.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1455,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "chaincode/ccpe_chaincode.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13825,
						"regions":
						{
						},
						"selection":
						[
							[
								1606,
								1613
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Go/Go.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 332.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app-webservice/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 356,
						"regions":
						{
						},
						"selection":
						[
							[
								34,
								34
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 33.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Node.sublime-build",
	"project": "ibm-blockchain-node.js",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 305.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
